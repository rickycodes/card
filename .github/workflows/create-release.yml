on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: setup emsdk
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          git pull
          ./emsdk install 2.0.0
          ./emsdk activate 2.0.0
      - name: Install node
        uses: actions/setup-node@v2
      - name: wat
        run: |
          source ./emsdk/emsdk_env.sh
          git --version
          cargo --version
          yarn --version
          emsdk list
          rustup target add wasm32-unknown-emscripten
          yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: |
            ./bin.js
            ./card.js
            ./card.wasm
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - uses: actions/download-artifact@v2
        with:
          name: my-artifact
      - name: Publish
        run: |
          cat card.js
          yarn start
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm ci
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release Notes
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ github.ref }}",
              generate_release_notes: true
            });
